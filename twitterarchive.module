<?php

/**
 * @file
 *
 * Quick module for displaying Twitterarchive drupal from JSON data files
 *
 */

/**
 * Implements hook_menu().
 */
function twitterarchive_menu() {
  $items['twitterarchive'] = array(
    'page callback' => '_twitterarchive',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function twitterarchive_theme() {
  return array(
    'tweet_output' => array(
      'variables' => array('tweets' => NULL),
      'template' => 'templates/tweet_output',
    ),
  );
}

/**
 * Callback function for menu item 'twitterarchive'
 */
function _twitterarchive() {
  // get JS data files, remove data.tweets line and merge together
  $data_files = file_scan_directory(drupal_get_path('module', 'twitterarchive') . '/data', '/\.js$/i');
  if (!empty($data_files)) {
    $file_data = array();
    foreach(array_keys($data_files) as $file) {
      $data = @file_get_contents($file);
      if ($data) {
        $data = explode("\n", $data);
        array_shift($data);
        $data = implode("\n", $data);
        $file_data = array_merge($file_data, drupal_json_decode($data));
      }
    }
  }
  else {
    throw new Exception(t("No data files, please add the data/tweets/*.js files from your twitter archive download to the 'data' folder of this module"));
  }

  if (!empty($file_data)) {
    $tweets = array();
    foreach ($file_data as $item) {
      // [using preg_replace_callback as the 'e' modifier is deprecated]
      $item['text'] = preg_replace_callback('/(https?:\/\/\S+)/i', '_tweet_convert_links', $item['text']);
      $item['text'] = preg_replace_callback('/(#[a-zA-Z_0-9]+)/i', '_tweet_convert_hashtags', $item['text']);
      $item['text'] = preg_replace_callback('/@([a-zA-Z_0-9]+)/i', '_tweet_convert_usernames', $item['text']);

      $tweets[] = array(
        'id' => $item['id_str'],
        'source' => $item['source'],
        'text' => $item['text'],
        'created' => $item['created_at'],
        'name' => $item['user']['screen_name'],
      );
    }
    return theme('tweet_output', array('tweets' => $tweets));
  }
}

/**
 * Preg replace callback function for converting links in tweets to real links
 *
 * @param $matches
 *   The regular expression matches
 * @return
 *   A link
 */
function _tweet_convert_links($matches) {
  return l($matches[1], $matches[1], array('absolute' => TRUE));
}

/**
 * Preg replace callback function for converting hashtags to links
 *
 * @param $matches
 *   The regular expression matches
 * @return
 *   A link
 */
function _tweet_convert_hashtags($matches) {
  return l($matches[1], 'https://twitter.com/search?q=' . urlencode($matches[1]), array('absolute' => TRUE));
}

/**
 * Preg replace callback function for converting @usernames to links
 *
 * @param $matches
 *   The regular expression matches
 * @return
 *   A link
 */
function _tweet_convert_usernames($matches) {
  return l('@' . $matches[1], 'https://twitter.com/' . $matches[1], array('absolute' => TRUE));
}
