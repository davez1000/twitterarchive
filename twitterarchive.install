<?php

/**
 * @file
 *
 * Defines install processes for twitterarchive type
 */

/**
 * Implements hook_install().
 */
function twitterarchive_install() {
  // use get_t() to get the name of our localization function for translation
  // during install, when t() is not available.
  $t = get_t();

  // Define the node type.
  $twitterarchive = array(
    'type' => 'twitterarchive',
    'name' => $t('Twitterarchive'),
    'base' => 'node_content',
    'description' => $t('Twitterarchive tweets.'),
    'has_title' => TRUE,
    'title_label' => $t('Tweet')
  );

  // Complete the node type definition by setting any defaults not explicitly
  // declared above.
  // http://api.drupal.org/api/function/node_type_set_defaults/7
  $content_type = node_type_set_defaults($twitterarchive);

  // disable comments
  variable_set('comment_twitterarchive', COMMENT_NODE_HIDDEN);

  // Save the content type
  node_type_save($content_type);

}


/**
 * Implements hook_uninstall().
 */
function twitterarchive_uninstall() {
  // Gather all the content that might have been created while this
  $sql = "SELECT nid FROM {node} n WHERE n.type = :type";
  $result = db_query($sql, array(':type' => 'twitterarchive'));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  // Delete all the nodes
  // http://api.drupal.org/api/function/node_delete_multiple/7
  node_delete_multiple($nids);

  // Delete the content type
  // http://api.drupal.org/api/function/node_type_delete/7
  node_type_delete('twitterarchive');

  // Purge all field information
  // http://api.drupal.org/api/function/field_purge_batch/7
  field_purge_batch(1000);
}
